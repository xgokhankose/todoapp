{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gokhan\\\\todoapp\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Tasks from \"./src/Tasks\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.tasksWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \" Yapacaklar\\u0131m\"), React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, taskItems.map(function (item) {\n    return React.createElement(Task, {\n      key: index,\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }\n    });\n  }))), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height \",\n    style: styles.writeTaskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"bişiler yaz\",\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"+\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E8EAED\"\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  items: {\n    marginTop: 35\n  },\n  writeTaskWrapper: {\n    position: \"absolute\",\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    paddingVertical: 15,\n    width: 250,\n    paddingHorizontal: 15,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1\n  },\n  addText: {}\n});\n\"\";","map":{"version":3,"sources":["C:/Users/Gokhan/todoapp/App.js"],"names":["StatusBar","React","useState","Tasks","App","task","setTask","taskItems","setTaskItems","handleAddTask","styles","container","tasksWrapper","sectionTitle","items","map","item","index","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  SafeAreaView,\n  View,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport Tasks from \"./src/Tasks\";\n\nexport default function App() {\n  const [task, setTask] = useState();\n  const [taskItems,setTaskItems]=useState([]);\n  const handleAddTask = () => {\n    setTaskItems([...taskItems , task])\n    \n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.tasksWrapper}>\n        <Text style={styles.sectionTitle}> Yapacaklarım</Text>\n        <View style={styles.items}>\n        {\n          taskItems.map((item) => {\n            return <Task key={index} text={item}/>  \n          })\n        }\n        \n        </View>\n      </View>\n\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height \"}\n        style={styles.writeTaskWrapper}\n      >\n        <TextInput\n          style={styles.input}\n          placeholder={\"bişiler yaz\"}\n          value={task}\n          onChangeText={(text) => setTask(text)}\n        />\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E8EAED\",\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  items: {\n    marginTop: 35,\n  },\n  writeTaskWrapper: {\n    position: \"absolute\",\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  input: {\n    paddingVertical: 15,\n    width: 250,\n    paddingHorizontal: 15,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n  },\n  addText: {},\n});\n\"\""]},"metadata":{},"sourceType":"module"}